@page
@model DetailsModel
@{
    ViewData["Title"] = "Node details";
}

<partial name="_NavigationTitleCardPartial" model="@Helpers.ViewModels.NavigationTitleCardViewModel.GetNodeNavigationTitleCard(Model.View.Node)" />
@if (User.IsInRole("Administrator"))
{
    <a asp-page="/Administration/Data/Nodes/Details" asp-route-id="@Model.View.Node.Id" class="btn btn-info btn-block mb-3" title="Details">
        <span><i class="fas fa-info-circle"></i></span>
        <span>Details</span>
    </a>
}
@if (!string.IsNullOrEmpty(Model.View.Node.Description))
{
    <div class="card mb-3">
        <div class="card-body text-justify small">
            <span title="Description">@Model.View.Node.Description</span>
        </div>
    </div>
}
<div class="card mb-3">
    <div class="card-header font-weight-bold">
        <div class="d-flex flex-column flex-lg-row-reverse justify-content-center align-items-center justify-content-lg-between">
            <div>
                <span><i class="fas fa-database"></i></span>
            </div>
            <div>
                <span>Databases</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        @if (!Model.View.DatabaseNodes.Any())
        {
            <div class="alert alert-info text-justify text-wrap mb-0">
                <span><i class="fas fa-info-circle"></i></span>
                <span>There are no databases currently assigned.</span>
            </div>
        }
        else
        {
            <div class="alert alert-info text-justify text-wrap">
                <span><i class="fas fa-info-circle"></i></span>
                <span>The node is currently assigned to @Model.View.DatabaseNodes.Count() database@(Model.View.DatabaseNodes.Count() != 1 ? "s" : string.Empty). You can <a asp-page="/Content/DatabaseTypes/Generic/Relationships/DatabaseNodes/Index" asp-route-searchString="@Model.View.Node.Id" asp-route-searchIn="NodeId" class="alert-link">view the databases</a>.</span>
            </div>
            <table class="table table-striped table-bordered table-datatable" data-order="[[1]]">
                <thead class="thead-light">
                    <tr>
                        <th class="text-center text-break" data-orderable="false" data-searchable="false" data-name="index">
                            <span>#</span>
                        </th>
                        <th class="text-left text-break">
                            <span>Database</span>
                        </th>
                        <th class="text-center text-break" data-orderable="false" data-searchable="false">
                            <span>Links</span>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var databaseNode in Model.View.DatabaseNodes)
                    {
                        <tr>
                            <td class="text-center text-break">
                                <span></span>
                            </td>
                            <td class="text-left text-break">
                                <span title="@databaseNode.Database.Name">@databaseNode.Database.Name</span>
                            </td>
                            <td class="text-center text-break">
                                <a asp-page="/Content/DatabaseTypes/Generic/Databases/Databases/Details" asp-route-id="@databaseNode.Database.Id" title="Details">
                                    <span>Details</span>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>
<div class="card mb-3">
    <div class="card-header font-weight-bold">
        <div class="d-flex flex-column flex-lg-row-reverse justify-content-center align-items-center justify-content-lg-between">
            <div>
                <span><i class="fas fa-table"></i></span>
            </div>
            <div>
                <span>Fields</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        @if (!Model.View.DatabaseNodeFieldNodes.Any())
        {
            <div class="alert alert-info text-justify text-wrap mb-0">
                <span><i class="fas fa-info-circle"></i></span>
                <span>There are no fields currently assigned.</span>
            </div>
        }
        else
        {
            <div class="alert alert-info text-justify text-wrap">
                <span><i class="fas fa-info-circle"></i></span>
                <span>The node is currently assigned to @Model.View.DatabaseNodeFieldNodes.Count() field@(Model.View.DatabaseNodeFieldNodes.Count() != 1 ? "s" : string.Empty). You can <a asp-page="/Content/DatabaseTypes/Generic/Relationships/DatabaseNodeFieldNodes/Index" asp-route-searchString="@Model.View.Node.Id" asp-route-searchIn="NodeId" class="alert-link">view the fields</a>.</span>
            </div>
            <table class="table table-striped table-bordered table-datatable" data-order="[[1]]">
                <thead class="thead-light">
                    <tr>
                        <th class="text-center text-break" data-orderable="false" data-searchable="false" data-name="index">
                            <span>#</span>
                        </th>
                        <th class="text-left text-break">
                            <span>Field</span>
                        </th>
                        <th class="text-center text-break">
                            <span>Value</span>
                        </th>
                        <th class="text-center text-break" data-orderable="false" data-searchable="false">
                            <span>Internal</span>
                        </th>
                        <th class="text-center text-break" data-orderable="false" data-searchable="false">
                            <span>External</span>
                            <span><i class="fas fa-external-link-alt"></i></span>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var databaseNodeFieldNode in Model.View.DatabaseNodeFieldNodes)
                    {
                        <tr>
                            <td class="text-center text-break">
                                <span></span>
                            </td>
                            <td class="text-left text-break">
                                <span title="@databaseNodeFieldNode.DatabaseNodeField.Name">@databaseNodeFieldNode.DatabaseNodeField.Name</span>
                            </td>
                            <td class="text-center text-break">
                                <span title="@databaseNodeFieldNode.Value">@databaseNodeFieldNode.Value</span>
                            </td>
                            <td class="text-center text-break">
                                <a asp-page="/Content/DatabaseTypes/Generic/Databases/DatabaseNodeFields/Details" asp-route-id="@databaseNodeFieldNode.DatabaseNodeField.Id" title="Details">
                                    <span>Details</span>
                                </a>
                            </td>
                            <td class="text-center text-break">
                                @if (!string.IsNullOrEmpty(databaseNodeFieldNode.DatabaseNodeField.Url))
                                {
                                    <a href="@databaseNodeFieldNode.DatabaseNodeField.Url@databaseNodeFieldNode.Value" title="Details" target="_blank" rel="nofollow noopener noreferrer">
                                        <span>Details</span>
                                    </a>
                                }
                                else
                                {
                                    <span>-</span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>
<div class="card mb-3">
    <div class="card-header font-weight-bold">
        <div class="d-flex flex-column flex-lg-row-reverse justify-content-center align-items-center justify-content-lg-between">
            <div>
                <span><i class="fas fa-arrow-right"></i></span>
            </div>
            <div>
                <span>Edges</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        @if (!Model.View.EdgeNodes.Any())
        {
            <div class="alert alert-info text-justify text-wrap mb-0">
                <span><i class="fas fa-info-circle"></i></span>
                <span>There are no edges currently assigned.</span>
            </div>
        }
        else
        {
            <div class="alert alert-info text-justify text-wrap">
                <span><i class="fas fa-info-circle"></i></span>
                <span>The node is currently assigned to @Model.View.EdgeNodes.Count() edge@(Model.View.EdgeNodes.Count() != 1 ? "s" : string.Empty). You can <a asp-page="/Content/DatabaseTypes/Generic/Relationships/EdgeNodes/Index" asp-route-searchString="@Model.View.Node.Id" asp-route-searchIn="NodeId" class="alert-link">view the edges</a>.</span>
            </div>
            <table class="table table-striped table-bordered table-datatable" data-order="[[1]]">
                <thead class="thead-light">
                    <tr>
                        <th class="text-center text-break" data-orderable="false" data-searchable="false" data-name="index">
                            <span>#</span>
                        </th>
                        <th class="text-left text-break">
                            <span>Edge</span>
                        </th>
                        <th class="text-left text-break">
                            <span>Type</span>
                        </th>
                        <th class="text-center text-break" data-orderable="false" data-searchable="false">
                            <span>Links</span>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var edgeNode in Model.View.EdgeNodes)
                    {
                        <tr>
                            <td class="text-center text-break">
                                <span></span>
                            </td>
                            <td class="text-left text-break">
                                <span title="@edgeNode.Edge.Name">@edgeNode.Edge.Name</span>
                            </td>
                            <td class="text-left text-break">
                                <span title="@edgeNode.Type.ToString()">@edgeNode.Type.ToString()</span>
                            </td>
                            <td class="text-center text-break">
                                <a asp-page="/Content/DatabaseTypes/Generic/Data/Edges/Details" asp-route-id="@edgeNode.Edge.Id" title="Details">
                                    <span>Details</span>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>
<div class="card mb-3">
    <div class="card-header font-weight-bold">
        <div class="d-flex flex-column flex-lg-row-reverse justify-content-center align-items-center justify-content-lg-between">
            <div>
                <span><i class="fas fa-folder"></i></span>
            </div>
            <div>
                <span>Node collections</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        @if (!Model.View.NodeCollectionNodes.Any())
        {
            <div class="alert alert-info text-justify text-wrap mb-0">
                <span><i class="fas fa-info-circle"></i></span>
                <span>There are no node collections currently assigned.</span>
            </div>
        }
        else
        {
            <div class="alert alert-info text-justify text-wrap">
                <span><i class="fas fa-info-circle"></i></span>
                <span>The node is currently assigned to @Model.View.NodeCollectionNodes.Count() node collection@(Model.View.NodeCollectionNodes.Count() != 1 ? "s" : string.Empty). You can <a asp-page="/Content/DatabaseTypes/Generic/Relationships/NodeCollectionNodes/Index" asp-route-searchString="@Model.View.Node.Id" asp-route-searchIn="NodeId" class="alert-link">view the node collections</a>.</span>
            </div>
            <table class="table table-striped table-bordered table-datatable" data-order="[[1]]">
                <thead class="thead-light">
                    <tr>
                        <th class="text-center text-break" data-orderable="false" data-searchable="false" data-name="index">
                            <span>#</span>
                        </th>
                        <th class="text-left text-break">
                            <span>Node collection</span>
                        </th>
                        <th class="text-center text-break" data-orderable="false" data-searchable="false">
                            <span>Links</span>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var nodeCollectionNode in Model.View.NodeCollectionNodes)
                    {
                        <tr>
                            <td class="text-center text-break">
                                <span></span>
                            </td>
                            <td class="text-left text-break">
                                <span title="@nodeCollectionNode.NodeCollection.Name">@nodeCollectionNode.NodeCollection.Name</span>
                            </td>
                            <td class="text-center text-break">
                                <a asp-page="/Content/DatabaseTypes/Generic/Data/NodeCollections/Details" asp-route-id="@nodeCollectionNode.NodeCollection.Id" title="Details">
                                    <span>Details</span>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    </div>
</div>
