@page
@model IndexModel
@{
    ViewData["Title"] = "Analysis details";
    ViewData["ActiveGroup"] = "AnalysisIndex";
    ViewData["ActivePage"] = "AnalysisIndex";
}

<partial name="_NavigationTitleCardPartial" model="@Helpers.ViewModels.NavigationTitleCardViewModel.GetAnalysisNavigationTitleCard(Model.View.Analysis)" />
<div class="card mb-3">
    <div class="card-body text-center">
        <div class="text-uppercase">
            @switch (Model.View.Analysis.Status)
            {
                case NetControl4BioMed.Data.Enumerations.AnalysisStatus.Scheduled:
                    <span title="@Model.View.Analysis.Status.ToString()" class="text-warning"><i class="fas fa-clock"></i></span>
                    break;
                case NetControl4BioMed.Data.Enumerations.AnalysisStatus.Initializing:
                    <span title="@Model.View.Analysis.Status.ToString()" class="text-primary"><i class="fas fa-play-circle"></i></span>
                    break;
                case NetControl4BioMed.Data.Enumerations.AnalysisStatus.Ongoing:
                    <span title="@Model.View.Analysis.Status.ToString()" class="text-primary"><i class="fas fa-sync-alt fa-spin"></i></span>
                    break;
                case NetControl4BioMed.Data.Enumerations.AnalysisStatus.Stopping:
                    <span title="@Model.View.Analysis.Status.ToString()" class="text-danger"><i class="fas fa-stopwatch"></i></span>
                    break;
                case NetControl4BioMed.Data.Enumerations.AnalysisStatus.Stopped:
                    <span title="@Model.View.Analysis.Status.ToString()" class="text-danger"><i class="fas fa-stop-circle"></i></span>
                    break;
                case NetControl4BioMed.Data.Enumerations.AnalysisStatus.Completed:
                    <span title="@Model.View.Analysis.Status.ToString()" class="text-success"><i class="fas fa-check-circle"></i></span>
                    break;
                case NetControl4BioMed.Data.Enumerations.AnalysisStatus.Error:
                    <span title="@Model.View.Analysis.Status.ToString()" class="text-danger"><i class="fas fa-times-circle"></i></span>
                    break;
                default:
                    break;
            }
            <span title="Status">@Model.View.Analysis.Status.ToString()</span>
        </div>
        <div class="font-weight-bold">
            <span title="Progress">@Math.Round((double)Model.View.Analysis.CurrentIteration * 100 / Model.View.Analysis.MaximumIterations, 2) / @Math.Round((double)Model.View.Analysis.CurrentIterationWithoutImprovement * 100 / Model.View.Analysis.MaximumIterationsWithoutImprovement, 2)</span>
        </div>
    </div>
</div>
<div class="row align-items-center">
    <div class="col-lg-4 mb-3">
        <a asp-page="/Content/Created/Analyses/Edit" asp-route-id="@Model.View.Analysis.Id" class="btn btn-warning btn-block" title="Edit">
            <span><i class="fas fa-pencil-alt"></i></span>
            <span>Edit</span>
        </a>
    </div>
    <div class="col-lg-4 mb-3">
        <a asp-page="/Content/Created/Analyses/Download" asp-route-ids="@Model.View.Analysis.Id" class="btn btn-primary btn-block" title="Download">
            <span><i class="fas fa-download"></i></span>
            <span>Download</span>
        </a>
    </div>
    <div class="col-lg-4 mb-3">
        <a asp-page="/Content/Created/Analyses/Delete" asp-route-ids="@Model.View.Analysis.Id" class="btn btn-danger btn-block" title="Delete">
            <span><i class="fas fa-trash"></i></span>
            <span>Delete</span>
        </a>
    </div>
</div>
@if (!string.IsNullOrEmpty(Model.View.Analysis.Description))
{
    <div class="card mb-3">
        <div class="card-body text-justify small">
            <span title="Description">@Model.View.Analysis.Description</span>
        </div>
    </div>
}
<partial name="_NavigationQuickLinksPartial" model="@Helpers.ViewModels.NavigationQuickLinkViewModel.GetAnalysisNavigationQuickLinks(Model.View.Analysis)" />
@if (Model.View.ShowVisualization)
{
    <div class="card mb-3">
        <div class="card-header font-weight-bold">
            <div class="d-flex flex-column flex-lg-row-reverse justify-content-center align-items-center justify-content-lg-between">
                <div>
                    <span><i class="fas fa-eye"></i></span>
                </div>
                <div>
                    <span>Visualize</span>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="alert alert-primary text-justify text-wrap">
                <span><i class="fas fa-info-circle"></i></span>
                <span>As the network corresponding to the analysis is relatively small, you can click the button below to visualize it in browser.</span>
            </div>
            <a asp-page="/Content/Created/Analyses/Details/Visualize" asp-route-id="@Model.View.Analysis.Id" class="btn btn-primary btn-block">
                <span>Visualize</span>
            </a>
        </div>
    </div>
}
<div class="card mb-3">
    <div class="card-header font-weight-bold">
        <div class="d-flex flex-column flex-lg-row-reverse justify-content-center align-items-center justify-content-lg-between">
            <div>
                <span><i class="fas fa-code"></i></span>
            </div>
            <div>
                <span>Parameters</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="alert alert-primary text-justify text-wrap">
            <span><i class="fas fa-info-circle"></i></span>
            <span>The parameters of used by the analysis algorithm are displayed below.</span>
        </div>
    </div>
</div>
<div class="card mb-3">
    <div class="card-header font-weight-bold">
        <div class="d-flex flex-column flex-lg-row-reverse justify-content-center align-items-center justify-content-lg-between">
            <div>
                <span><i class="fas fa-code"></i></span>
            </div>
            <div>
                <span>Parameters</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="form-group">
            <label asp-for="View.Analysis.Algorithm" class="font-weight-bold">Algorithm</label>
            <input asp-for="View.Analysis.Algorithm" class="form-control" value="@Model.View.Analysis.Algorithm.ToString()" readonly />
            <span asp-description-for="View.Analysis.Algorithm" class="text-muted small">The algorithm used in running the analysis.</span>
            <span asp-validation-for="View.Analysis.Algorithm" class="text-danger small"></span>
        </div>
        @foreach (var parameter in Model.View.Parameters)
        {
            <div class="form-group">
                <label for="@parameter.Id" class="font-weight-bold">@parameter.Name</label>
                <input id="@parameter.Id" name="@parameter.Id" class="form-control" value="@parameter.Value" readonly />
                <span description-for="@parameter.Id" class="text-muted small">@parameter.Description</span>
            </div>
        }
    </div>
</div>
