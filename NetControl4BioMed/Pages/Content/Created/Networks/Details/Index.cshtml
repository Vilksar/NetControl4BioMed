@page
@model IndexModel
@using Helpers.Extensions
@{
    ViewData["Title"] = "Network details";
}

<partial name="_NavigationTitleCardPartial" model="@Helpers.ViewModels.NavigationTitleCardViewModel.GetNetworkNavigationTitleCard(Model.View.Network)" />
<div class="row align-items-center">
    <div class="col-lg-4 mb-3">
        <a asp-page="/Content/Created/Networks/Edit" asp-route-id="@Model.View.Network.Id" class="btn btn-warning btn-block" title="Edit">
            <span><i class="fas fa-pencil-alt"></i></span>
            <span>Edit</span>
        </a>
    </div>
    <div class="col-lg-4 mb-3">
        <a asp-page="/Content/Created/Networks/Download" asp-route-ids="@Model.View.Network.Id" class="btn btn-primary btn-block" title="Download">
            <span><i class="fas fa-download"></i></span>
            <span>Download</span>
        </a>
    </div>
    <div class="col-lg-4 mb-3">
        <a asp-page="/Content/Created/Networks/Delete" asp-route-ids="@Model.View.Network.Id" class="btn btn-danger btn-block" title="Delete">
            <span><i class="fas fa-trash"></i></span>
            <span>Delete</span>
        </a>
    </div>
</div>
@if (!string.IsNullOrEmpty(Model.View.Network.Description))
{
    <div class="card mb-3">
        <div class="card-body text-justify small">
            <span title="Description">@Model.View.Network.Description</span>
        </div>
    </div>
}
<partial name="_NavigationQuickLinksPartial" model="@Helpers.ViewModels.NavigationQuickLinkViewModel.GetNetworkNavigationQuickLinks(Model.View.Network)" />
@if (Model.View.ShowVisualization)
{
    <div class="card mb-3">
        <div class="card-header font-weight-bold">
            <div class="d-flex flex-column flex-lg-row-reverse justify-content-center align-items-center justify-content-lg-between">
                <div>
                    <span><i class="fas fa-eye"></i></span>
                </div>
                <div>
                    <span>Visualize</span>
                </div>
            </div>
        </div>
        <div class="card-body">
            <div class="alert alert-primary text-justify text-wrap">
                <span><i class="fas fa-info-circle"></i></span>
                <span>As the network is relatively small, you can click the button below to visualize it in browser.</span>
            </div>
            <a asp-page="/Content/Created/Networks/Details/Visualize" asp-route-id="@Model.View.Network.Id" class="btn btn-primary btn-block">
                <span>Visualize</span>
            </a>
        </div>
    </div>
}
<div class="card mb-3">
    <div class="card-header font-weight-bold">
        <div class="d-flex flex-column flex-lg-row-reverse justify-content-center align-items-center justify-content-lg-between">
            <div>
                <span><i class="fas fa-code"></i></span>
            </div>
            <div>
                <span>Parameters</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="form-group">
            <label asp-for="View.Network.Algorithm" class="font-weight-bold">Algorithm</label>
            <select asp-for="View.Network.Algorithm" class="custom-select" title="@Model.View.Network.Algorithm.GetDisplayDescription()" disabled>
                @foreach (var item in Enum.GetValues(typeof(NetControl4BioMed.Data.Enumerations.NetworkAlgorithm)).Cast<NetControl4BioMed.Data.Enumerations.NetworkAlgorithm>())
                {
                    <option value="@item" title="@item.GetDisplayDescription()">@item.GetDisplayName()</option>
                }
            </select>
            <span asp-description-for="View.Network.Algorithm" class="text-muted small">The algorithm used in generating the network.</span>
            <span asp-validation-for="View.Network.Algorithm" class="text-danger small"></span>
        </div>
    </div>
</div>
