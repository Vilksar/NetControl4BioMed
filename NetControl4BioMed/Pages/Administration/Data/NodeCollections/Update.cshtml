@page
@model UpdateModel
@{
    ViewData["Title"] = "Update node collections";
}

@section Breadcrumbs {
    <a asp-page="/Administration/Data/Nodes/Update" class="breadcrumb-item"><span>Update</span></a>
}

<div class="alert alert-danger text-wrap text-justify">
    <span>Editing or deleting a node collection will delete all of the networks and analyses that use it. <span class="font-weight-bold">This action can't be reversed!</span></span>
</div>
<div class="alert alert-info text-wrap text-justify">
    <span>There are three possible types of updates. They will be all described briefly below:</span>
    <ul class="mb-0">
        <li>
            <span><span class="font-weight-bold">Create</span>: Each item of the provided data will be created, if possible, in the database. If the <code>Id</code> field is empty, then a new one will be automatically randomly generated by the database. The items with an ID that already exists in the database will be ignored.</span>
        </li>
        <li>
            <span><span class="font-weight-bold">Edit</span>: Each item of the provided data will be edited, if possible, in the database. The items with an empty <code>Id</code> field, or with an ID that can't be found in the database will be ignored. The <code>NodeIds</code> of each item will overwrite all of the current nodes of the corresponding node collection.</span>
        </li>
        <li>
            <span><span class="font-weight-bold">Delete</span>: Each item of the provided data will be deleted, if possible, from the database. The items with an empty <code>Id</code> field, or with an ID that can't be found in the database will be ignored. Only the IDs are required for this update type.</span>
        </li>
    </ul>
</div>
<div class="card mb-3">
    <div class="card-header font-weight-bold">
        <div class="d-flex flex-column flex-lg-row-reverse justify-content-center align-items-center justify-content-lg-between">
            <div>
                <span><i class="fas fa-quote-right"></i></span>
            </div>
            <div>
                <span>Model</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        <code style="white-space: pre-wrap">@Model.View.JsonModel</code>
    </div>
</div>
<div class="card mb-3">
    <div class="card-header font-weight-bold">
        <div class="d-flex flex-column flex-lg-row-reverse justify-content-center align-items-center justify-content-lg-between">
            <div>
                <span><i class="fas fa-code"></i></span>
            </div>
            <div>
                <span>Update</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        <form method="post" class="text-justify">
            <div asp-validation-summary="ModelOnly" class="alert alert-danger text-wrap text-justify"></div>
            <div class="form-group">
                <label asp-for="Input.Type" class="font-weight-bold">Type</label>
                <select asp-for="Input.Type" class="custom-select form-control">
                    <option value="Create">Create</option>
                    <option value="Edit">Edit</option>
                    <option value="Delete">Delete</option>
                </select>
                <span asp-description-for="Input.Type" class="text-muted small">The type of the update. The data will be processed differently based on this value.</span>
                <span asp-validation-for="Input.Type" class="text-danger small"></span>
            </div>
            <div class="file-group">
                <div class="form-group">
                    <label asp-for="Input.Data" class="font-weight-bold">Data</label>
                    <textarea asp-for="Input.Data" class="form-control file-group-text" rows="10"></textarea>
                    <div class="custom-file mt-2">
                        <input type="file" class="custom-file-input file-group-file-upload" />
                        <label class="custom-file-label file-group-file-label">Choose file</label>
                    </div>
                    <span asp-description-for="Input.Data" class="text-muted small">The data of the update. This field should be a JSON object in the same format as the model.</span>
                    <span asp-validation-for="Input.Data" class="text-danger small"></span>
                </div>
            </div>
            <button type="submit" class="btn btn-block btn-success" title="Update">
                <span>Update</span>
            </button>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ScriptsValidationPartial" />
}
