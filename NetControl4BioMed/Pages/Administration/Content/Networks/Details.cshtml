@page
@model DetailsModel
@{
    ViewData["Title"] = "Network details";
}

@section Breadcrumbs {
    <a asp-page="/Administration/Content/Networks/Details" class="breadcrumb-item"><span>Details</span></a>
}

<div class="row align-items-center">
    <div class="col-lg-12 mb-3">
        <a asp-page="/Administration/Content/Networks/Delete" asp-route-ids="@Model.View.Network.Id" class="btn btn-danger btn-block" title="Delete">
            <span><i class="fas fa-trash"></i></span>
            <span>Delete</span>
        </a>
    </div>
</div>
<div class="card mb-3">
    <div class="card-header font-weight-bold">
        <div class="d-flex flex-column flex-lg-row-reverse justify-content-center align-items-center justify-content-lg-between">
            <div>
                <span><i class="fas fa-info-circle"></i></span>
            </div>
            <div>
                <span>Details</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        <form method="get" class="text-justify">
            <div asp-validation-summary="ModelOnly" class="alert alert-danger text-justify text-wrap"></div>
            <div class="form-group">
                <label asp-for="View.Network.Id" class="font-weight-bold">ID</label>
                <input asp-for="View.Network.Id" class="form-control" readonly />
                <span asp-description-for="View.Network.Id" class="text-muted small">The ID of the network.</span>
                <span asp-validation-for="View.Network.Id" class="text-danger small"></span>
            </div>
            <div class="form-group">
                <label asp-for="View.Network.DateTimeCreated" class="font-weight-bold">Date</label>
                <input asp-for="View.Network.DateTimeCreated" class="form-control" readonly />
                <span asp-description-for="View.Network.DateTimeCreated" class="text-muted small">The date and time when the network was created.</span>
                <span asp-validation-for="View.Network.DateTimeCreated" class="text-danger small"></span>
            </div>
            <div class="form-group">
                <label asp-for="View.Network.Name" class="font-weight-bold">Name</label>
                <input asp-for="View.Network.Name" class="form-control" readonly />
                <span asp-description-for="View.Network.Name" class="text-muted small">The name of the network.</span>
                <span asp-validation-for="View.Network.Name" class="text-danger small"></span>
            </div>
            <div class="form-group">
                <label asp-for="View.Network.Description" class="font-weight-bold">Description</label>
                <textarea asp-for="View.Network.Description" class="form-control" readonly></textarea>
                <span asp-description-for="View.Network.Description" class="text-muted small">The description of the network.</span>
                <span asp-validation-for="View.Network.Description" class="text-danger small"></span>
            </div>
            <div class="form-group">
                <label asp-for="View.Network.Algorithm" class="font-weight-bold">Algorithm</label>
                <input asp-for="View.Network.Algorithm" class="form-control" readonly />
                <span asp-description-for="View.Network.Algorithm" class="text-muted small">The algorithm used to generate the network.</span>
                <span asp-validation-for="View.Network.Algorithm" class="text-danger small"></span>
            </div>
        </form>
    </div>
</div>
<div class="card mb-3">
    <div class="card-header font-weight-bold">
        <div class="d-flex flex-column flex-lg-row-reverse justify-content-center align-items-center justify-content-lg-between">
            <div>
                <span><i class="fas fa-user"></i></span>
            </div>
            <div>
                <span>Users</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="alert alert-info text-justify text-wrap mb-0">
            <span><i class="fas fa-info-circle"></i></span>
            <span>The network is currently assigned to @Model.View.Network.NetworkUsers.Count() registered user@(Model.View.Network.NetworkUsers.Count() != 1 ? "s" : string.Empty).</span>
        </div>
    </div>
</div>
<div class="card mb-3">
    <div class="card-header font-weight-bold">
        <div class="d-flex flex-column flex-lg-row-reverse justify-content-center align-items-center justify-content-lg-between">
            <div>
                <span><i class="fas fa-user"></i></span>
            </div>
            <div>
                <span>User invitations</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="alert alert-info text-justify text-wrap mb-0">
            <span><i class="fas fa-info-circle"></i></span>
            <span>The network is currently assigned to @Model.View.Network.NetworkUserInvitations.Count() unregistered user@(Model.View.Network.NetworkUserInvitations.Count() != 1 ? "s" : string.Empty).</span>
        </div>
    </div>
</div>
<div class="card mb-3">
    <div class="card-header font-weight-bold">
        <div class="d-flex flex-column flex-lg-row-reverse justify-content-center align-items-center justify-content-lg-between">
            <div>
                <span><i class="fas fa-circle"></i></span>
            </div>
            <div>
                <span>Nodes</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="alert alert-info text-justify text-wrap mb-0">
            <span><i class="fas fa-info-circle"></i></span>
            <span>The network currently contains @Model.View.Network.NetworkNodes.Count() node@(Model.View.Network.NetworkNodes.Count() != 1 ? "s" : string.Empty).</span>
        </div>
    </div>
</div>
<div class="card mb-3">
    <div class="card-header font-weight-bold">
        <div class="d-flex flex-column flex-lg-row-reverse justify-content-center align-items-center justify-content-lg-between">
            <div>
                <span><i class="fas fa-arrow-right"></i></span>
            </div>
            <div>
                <span>Edges</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="alert alert-info text-justify text-wrap mb-0">
            <span><i class="fas fa-info-circle"></i></span>
            <span>The network currently contains @Model.View.Network.NetworkEdges.Count() edge@(Model.View.Network.NetworkEdges.Count() != 1 ? "s" : string.Empty).</span>
        </div>
    </div>
</div>
<div class="card mb-3">
    <div class="card-header font-weight-bold">
        <div class="d-flex flex-column flex-lg-row-reverse justify-content-center align-items-center justify-content-lg-between">
            <div>
                <span><i class="fas fa-desktop"></i></span>
            </div>
            <div>
                <span>Analyses</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="alert alert-info text-justify text-wrap mb-0">
            <span><i class="fas fa-info-circle"></i></span>
            <span>The network is currently assigned to @Model.View.Network.AnalysisNetworks.Count() analys@(Model.View.Network.AnalysisNetworks.Count() != 1 ? "e" : "i")s.</span>
        </div>
    </div>
</div>
<div class="card mb-3">
    <div class="card-header font-weight-bold">
        <div class="d-flex flex-column flex-lg-row-reverse justify-content-center align-items-center justify-content-lg-between">
            <div>
                <span><i class="fas fa-database"></i></span>
            </div>
            <div>
                <span>Databases</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="alert alert-info text-justify text-wrap mb-0">
            <span><i class="fas fa-info-circle"></i></span>
            <span>The network is currently assigned to @Model.View.Network.NetworkDatabases.Count() database@(Model.View.Network.NetworkDatabases.Count() != 1 ? "s" : string.Empty).</span>
        </div>
    </div>
</div>
<div class="card mb-3">
    <div class="card-header font-weight-bold">
        <div class="d-flex flex-column flex-lg-row-reverse justify-content-center align-items-center justify-content-lg-between">
            <div>
                <span><i class="fas fa-folder"></i></span>
            </div>
            <div>
                <span>Node collections</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="alert alert-info text-justify text-wrap mb-0">
            <span><i class="fas fa-info-circle"></i></span>
            <span>The network is currently assigned to @Model.View.Network.NetworkNodeCollections.Count() node collection@(Model.View.Network.NetworkNodeCollections.Count() != 1 ? "s" : string.Empty).</span>
        </div>
    </div>
</div>
