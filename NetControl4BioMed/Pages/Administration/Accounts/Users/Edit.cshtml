@page
@model EditModel
@{
    ViewData["Title"] = "Edit user";
}

@section Breadcrumbs {
    <a asp-page="/Administration/Accounts/Users/Edit" class="breadcrumb-item"><span>Edit</span></a>
}

<div class="row align-items-center">
    <div class="col-lg-6 mb-3">
        <a asp-page="/Administration/Accounts/Users/Details" asp-route-id="@Model.View.User.Id" class="btn btn-info btn-block" title="Details">
            <span><i class="fas fa-info-circle"></i></span>
            <span>Details</span>
        </a>
    </div>
    <div class="col-lg-6 mb-3">
        <a asp-page="/Administration/Accounts/Users/Delete" asp-route-ids="@Model.View.User.Id" class="btn btn-danger btn-block" title="Delete">
            <span><i class="fas fa-trash"></i></span>
            <span>Delete</span>
        </a>
    </div>
</div>
<div class="card mb-3">
    <div class="card-header font-weight-bold">
        <div class="d-flex flex-column flex-lg-row-reverse justify-content-center align-items-center justify-content-lg-between">
            <div>
                <span><i class="fas fa-pencil-alt"></i></span>
            </div>
            <div>
                <span>Edit</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        <form method="post" class="text-justify">
            <div asp-validation-summary="ModelOnly" class="alert alert-danger text-wrap text-justify"></div>
            <div class="form-group">
                <label asp-for="Input.Id" class="font-weight-bold">ID</label>
                <input asp-for="Input.Id" class="form-control" readonly />
                <span asp-description-for="Input.Id" class="text-muted small">The ID of the user.</span>
                <span asp-validation-for="Input.Id" class="text-danger small"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Email" class="font-weight-bold">E-mail</label>
                <input asp-for="Input.Email" class="form-control" />
                <span asp-description-for="Input.Email" class="text-muted small">The e-mail of the user.</span>
                <span asp-validation-for="Input.Email" class="text-danger small"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.EmailConfirmed" class="font-weight-bold">Set the e-mail as confirmed?</label>
                <select asp-for="Input.EmailConfirmed" class="custom-select form-control" disabled="@(Model.Input.EmailConfirmed ? "disabled" : null)">
                    <option value="false">No</option>
                    <option value="true">Yes</option>
                </select>
                <span asp-description-for="Input.EmailConfirmed" class="text-muted small">The e-mail confirmation status. It can be used to circumvent the need for the user to manually confirm their e-mail.</span>
                <span asp-validation-for="Input.EmailConfirmed" class="text-danger small"></span>
            </div>
            <button type="submit" class="btn btn-block btn-success" title="Update">
                <span>Update</span>
            </button>
        </form>
    </div>
</div>
<div class="card mb-3">
    <div class="card-header font-weight-bold">
        <div class="d-flex flex-column flex-lg-row-reverse justify-content-center align-items-center justify-content-lg-between">
            <div>
                <span><i class="fas fa-user-tag"></i></span>
            </div>
            <div>
                <span>Roles</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="alert alert-info text-justify text-wrap mb-0">
            <span><i class="fas fa-info-circle"></i></span>
            <span>The user is currently assigned to @Model.View.User.UserRoles.Count() role@(Model.View.User.UserRoles.Count() != 1 ? "s" : string.Empty). You can <a asp-page="/Administration/Accounts/UserRoles/Index" asp-route-searchString="@Model.View.User.Id" asp-route-searchIn="UserId" class="alert-link">view the current roles</a>, or <a asp-page="/Administration/Accounts/UserRoles/Create" asp-route-userString="@Model.View.User.Id" class="alert-link">add a new one</a>.</span>
        </div>
    </div>
</div>
<div class="card mb-3">
    <div class="card-header font-weight-bold">
        <div class="d-flex flex-column flex-lg-row-reverse justify-content-center align-items-center justify-content-lg-between">
            <div>
                <span><i class="fas fa-user-shield"></i></span>
            </div>
            <div>
                <span>Databases</span>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="alert alert-info text-justify text-wrap mb-0">
            <span><i class="fas fa-info-circle"></i></span>
            <span>The user currently has access to @Model.View.User.DatabaseUsers.Count() database@(Model.View.User.DatabaseUsers.Count() != 1 ? "s" : string.Empty). You can <a asp-page="/Administration/Accounts/DatabaseUsers/Index" asp-route-searchString="@Model.View.User.Id" asp-route-searchIn="UserId" class="alert-link">view the current databases</a>, or <a asp-page="/Administration/Accounts/DatabaseUsers/Create" asp-route-userString="@Model.View.User.Id" class="alert-link">add a new one</a>.</span>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ScriptsValidationPartial" />
}
